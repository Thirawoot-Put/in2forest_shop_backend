/auth/register
    GET
    REQUEST object
    {   
        email       string      email address, 
        password    string      password contain only alphabeth, 
        firstName   string      user first name, 
        lastName    string      user last name,
        mobile      string      mobile number
     }
    RESPONSE json
    201 {
            accessToken     string      user Token
            newUser         object      user object without password
        }
    400 {
            message     string      client error
            code        string      in use
        }
    500 {
            message     string      server error
        }

/auth/me 
    GET
    HEADER AUTHORIZATION "BEARER TOKEN"
    RESPONSE json
    200 {
            user    object      user object without password
        }

/auth/login
    POST
    REQUEST object
    {   
        email       string      user email address, 
        password    string      user password contain only alphabeth
    }
    RESPONSE
    200 {
        accessToken     string      user Token
        user            object      user object without password
    }
    400 {
            message     string      client error
            code        string      in use
        }
    500 {
            message     string      server error
        }

/admin/product
    POST
    REQUEST object
    {   
        productName     string      product name
        productDetail   string?     product detail
        size            string?     product size
        defect          string?     product defect
        price           int unsign  product price
        productTypeId   int         product type id     
    }
    RESPONSE
    201 {
        message         string      success
        newProduct      object      new product object
    }
    400 {
            message     string      client error
            code        string      invalid required data
        }
    500 {
            message     string      server error
        }
/admin/product/:productId
    PATCH
    REQUEST object
    {
        updateData      object      update data object
    }
    RESPONSE
    200 {
        updatedObject   object      object after update
    }
    400 {
            message     string      client error
        }
    500 {
            message     string      server error
        }
/admin/product/:productId
    DELETE
    RESPONSE
    200 {
            message     string      delete success
    }
    400 {
            message     string      client error
        }
    500 {
            message     string      server error
        }
/admin/product/types
    GET
    RESPONSE
    200 {
            types       array of object      type and id
    }
    400 {
            message     string      client error
        }
    500 {
            message     string      server error
        }
/product
    GET
    RESPONSE
    200 {
            entireProduct    array of object     product data
    }
    400 {
            message          string      client error
        }
    500 {
            message          string      server error
        }
